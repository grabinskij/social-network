{"version":3,"file":"static/js/793.b9c16914.chunk.js","mappings":"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","sources":["webpack://react-1/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","webpack://react-1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","components/Profile/MyPosts/MyPosts.jsx","webpack://react-1/./src/components/Profile/Profile.module.css?b512","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__Yu4oG\"};","import React from 'react';\nimport s from'./Post.module.css';\n\nconst Post = (props) => {\n    return (\n        <div className={s.item}>  \n            <img src=\"https://i.pinimg.com/236x/99/f9/71/99f9711d3850b59eebdcd77318390dff.jpg\" alt=\"\" />\n            <p>{ props.message }, { props.likesCount }</p>\n        </div>\n    )\n}\n\nexport default Post;","// extracted by mini-css-extract-plugin\nexport default {\"postBlocks\":\"MyPosts_postBlocks__4DH1W\",\"posts\":\"MyPosts_posts__GSiZ2\"};","import React from 'react';\nimport Post from './Post/Post';\nimport s from './MyPosts.module.css';\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\n\nconst MyPosts = (props) => {\n\n    let postsElements = props.posts.map((p, i) => <Post key={i} message={p.post} likesCount={p.likesCount}/>);\n\n    let newPostElement = React.createRef();\n\n\n\n    let onAddPost = (values) => {\n        props.addPost(values.newPostText);\n    }\n\n    return (\n        <div className={s.postBlocks}>\n            <h3>My posts></h3>\n            <AddNewPostFormRedux onSubmit={onAddPost} />\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}\n\nconst maxLength10 = maxLengthCreator(10);\n\nfunction AddNewPostForm(props){\n    return (\n    <form onSubmit={props.handleSubmit}>\n        <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} validate={[required, maxLength10]}/>\n        <div>\n            <button>Add post</button>\n        </div>\n    </form>\n    )\n}\n\nlet AddNewPostFormRedux = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\n\nexport default MyPosts;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__g-Lde\"};","// extracted by mini-css-extract-plugin\nexport default {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__XBXuJ\"};","import React, {useEffect, useState} from 'react';\nimport s from'./ProfileInfo.module.css';\n\nconst ProfileStatusWIthHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect (() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n    const deActivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n        return (\n            <div>\n                { !editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || \"------\"}</span>\n                </div>\n                }\n                {editMode &&\n                <div>\n                    <input onChange={ onStatusChange } autoFocus={true} onBlur={ deActivateEditMode } value={status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n\nexport default ProfileStatusWIthHooks;","import React from 'react';\nimport s from'./ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\n\nconst ProfileInfo = ({profile, status, updateStatus}) => {\n    if (!profile) {\n        return <Preloader/>\n    }\n    return (\n    <div className={s.content}>\n        <div>\n            <img src='https://img5.goodfon.ru/wallpaper/nbig/4/72/tsvety-polevye-romashki-risunok-romashki-polevye.jpg'></img>\n        </div>\n        <div className={s.descriptionBlock}>\n            <img src={profile.photos.large} />\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\n        </div>\n     </div>\n\n\n    )\n}\n\nexport default ProfileInfo;","import React from 'react';\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\nimport MyPosts from \"./MyPosts\";\nimport {connect} from \"react-redux\";\n\n\nconst mapStateToProps = (state) => {\n    return {\n        posts: state.profilePage.posts,\n        newPostText: state.profilePage.newPostText\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return{\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport MyPosts from './MyPosts/MyPosts';\nimport s from './Profile.module.css';\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\n\n\nconst Profile = (props) => {\n    return (\n        <div className={s.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\n            <MyPostsContainer />\n        </div>\n    )\n}\n\n\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport * as axios from \"axios\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {Navigate, useMatch} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.match ? this.props.match.params.userId : this.props.authorizedUserId;\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n}\n    render () {\n\n        return (\n        <Profile {...this.props} profile={this.props.profile}\n                 status={this.props.status}\n                 updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nconst ProfileMatch = (props) => {\n    let match = useMatch(\"/profile/:userId/\");\n    return (\n        <ProfileContainer {...props} match={match} />\n    )\n}\n\n// let AuthRedirectComponent = withAuthRedirect(ProfileMatch);\n\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth,\n});\n\n// let WithUrlDataContainerComponent = withRouter(ProfileContainer);\n\n// export default connect(mapStateToProps, {getUserProfile}) (AuthRedirectComponent);\nexport default compose(\n    connect (mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withAuthRedirect\n)(ProfileMatch);"],"names":["props","className","s","src","alt","message","likesCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","postsElements","posts","map","p","i","post","values","addPost","newPostText","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","photos","large","ProfileStatusWithHooks","Preloader","connect","state","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileContainer","userId","this","match","params","authorizedUserId","getUserProfile","getStatus","React","compose","auth","isAuth","withAuthRedirect","useMatch"],"sourceRoot":""}